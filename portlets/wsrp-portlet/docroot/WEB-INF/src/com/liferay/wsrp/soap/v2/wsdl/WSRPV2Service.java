
package com.liferay.wsrp.soap.v2.wsdl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import com.liferay.wsrp.soap.v2.intf.WSRPV2MarkupPortType;
import com.liferay.wsrp.soap.v2.intf.WSRPV2PortletManagementPortType;
import com.liferay.wsrp.soap.v2.intf.WSRPV2RegistrationPortType;
import com.liferay.wsrp.soap.v2.intf.WSRPV2ServiceDescriptionPortType;

/**
 * This class was generated by Apache CXF 2.1
 * Fri Jun 13 17:58:34 PDT 2008
 * Generated source version: 2.1
 * 
 */

@WebServiceClient(name = "WSRP_v2_Service", targetNamespace = "urn:oasis:names:tc:wsrp:v2:wsdl", wsdlLocation = "file:wsrp-2.0-service.wsdl")
public class WSRPV2Service extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("urn:oasis:names:tc:wsrp:v2:wsdl", "WSRP_v2_Service");
    public final static QName WSRPV2ServiceDescriptionService = new QName("urn:oasis:names:tc:wsrp:v2:wsdl", "WSRP_v2_ServiceDescription_Service");
    public final static QName WSRPV2MarkupService = new QName("urn:oasis:names:tc:wsrp:v2:wsdl", "WSRP_v2_Markup_Service");
    public final static QName WSRPV2RegistrationService = new QName("urn:oasis:names:tc:wsrp:v2:wsdl", "WSRP_v2_Registration_Service");
    public final static QName WSRPV2PortletManagementService = new QName("urn:oasis:names:tc:wsrp:v2:wsdl", "WSRP_v2_PortletManagement_Service");
    static {
        URL url = null;
        try {
            url = new URL("file:wsrp-2.0-service.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:wsrp-2.0-service.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public WSRPV2Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public WSRPV2Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public WSRPV2Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns WSRPV2ServiceDescriptionPortType
     */
    @WebEndpoint(name = "WSRP_v2_ServiceDescription_Service")
    public WSRPV2ServiceDescriptionPortType getWSRPV2ServiceDescriptionService() {
        return super.getPort(WSRPV2ServiceDescriptionService, WSRPV2ServiceDescriptionPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSRPV2ServiceDescriptionPortType
     */
    @WebEndpoint(name = "WSRP_v2_ServiceDescription_Service")
    public WSRPV2ServiceDescriptionPortType getWSRPV2ServiceDescriptionService(WebServiceFeature... features) {
        return super.getPort(WSRPV2ServiceDescriptionService, WSRPV2ServiceDescriptionPortType.class, features);
    }
    /**
     * 
     * @return
     *     returns WSRPV2MarkupPortType
     */
    @WebEndpoint(name = "WSRP_v2_Markup_Service")
    public WSRPV2MarkupPortType getWSRPV2MarkupService() {
        return super.getPort(WSRPV2MarkupService, WSRPV2MarkupPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSRPV2MarkupPortType
     */
    @WebEndpoint(name = "WSRP_v2_Markup_Service")
    public WSRPV2MarkupPortType getWSRPV2MarkupService(WebServiceFeature... features) {
        return super.getPort(WSRPV2MarkupService, WSRPV2MarkupPortType.class, features);
    }
    /**
     * 
     * @return
     *     returns WSRPV2RegistrationPortType
     */
    @WebEndpoint(name = "WSRP_v2_Registration_Service")
    public WSRPV2RegistrationPortType getWSRPV2RegistrationService() {
        return super.getPort(WSRPV2RegistrationService, WSRPV2RegistrationPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSRPV2RegistrationPortType
     */
    @WebEndpoint(name = "WSRP_v2_Registration_Service")
    public WSRPV2RegistrationPortType getWSRPV2RegistrationService(WebServiceFeature... features) {
        return super.getPort(WSRPV2RegistrationService, WSRPV2RegistrationPortType.class, features);
    }
    /**
     * 
     * @return
     *     returns WSRPV2PortletManagementPortType
     */
    @WebEndpoint(name = "WSRP_v2_PortletManagement_Service")
    public WSRPV2PortletManagementPortType getWSRPV2PortletManagementService() {
        return super.getPort(WSRPV2PortletManagementService, WSRPV2PortletManagementPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WSRPV2PortletManagementPortType
     */
    @WebEndpoint(name = "WSRP_v2_PortletManagement_Service")
    public WSRPV2PortletManagementPortType getWSRPV2PortletManagementService(WebServiceFeature... features) {
        return super.getPort(WSRPV2PortletManagementService, WSRPV2PortletManagementPortType.class, features);
    }

}
