<?xml version="1.0"?>

<project name="build-common-plugin">
	<import file="build-common.xml" />

	<target name="clean">
		<delete dir="docroot/WEB-INF/classes" />
		<delete dir="tmp" />
		<delete file="${plugin.file}" />
	</target>

	<target name="compile">
		<antcall target="merge" />

		<if>
			<available file="docroot/WEB-INF/src" />
			<then>
				<mkdir dir="docroot/WEB-INF/classes" />
				<mkdir dir="docroot/WEB-INF/lib" />

				<if>
					<available file="tmp" />
					<then>
						<path id="plugin-lib.classpath">
							<fileset dir="docroot/WEB-INF/lib" includes="*.jar" />
							<fileset dir="tmp/WEB-INF/lib" includes="*.jar" />
							<pathelement location="docroot/WEB-INF/classes" />
							<pathelement location="tmp/WEB-INF/classes" />
						</path>
					</then>
					<else>
						<path id="plugin-lib.classpath">
							<fileset dir="docroot/WEB-INF/lib" includes="*.jar" />
							<pathelement location="docroot/WEB-INF/classes" />
						</path>
					</else>
				</if>

				<copy todir="docroot/WEB-INF/lib">
					<fileset dir="${app.server.lib.portal.dir}" includes="commons-logging.jar,log4j.jar,util-bridges.jar,util-java.jar,util-taglib.jar" />
				</copy>

				<javac
					classpathref="plugin.classpath"
					compiler="${javac.compiler}"
					debug="${javac.debug}"
					deprecation="${javac.deprecation}"
					destdir="docroot/WEB-INF/classes"
					fork="${javac.fork}"
					memoryMaximumSize="${javac.memoryMaximumSize}"
					nowarn="on"
					srcdir="docroot/WEB-INF/src"
				/>

				<copy todir="docroot/WEB-INF/classes">
					<fileset dir="docroot/WEB-INF/src" excludes="**/*.java" />
				</copy>
			</then>
		</if>

		<antcall target="merge" />
	</target>

	<target name="war" depends="compile">
		<mkdir dir="${project.dir}/dist" />

		<if>
			<available file="tmp" />
			<then>
				<property name="docroot.dir" value="tmp" />
			</then>
			<else>
				<property name="docroot.dir" value="docroot" />
			</else>
		</if>

		<zip
			basedir="${docroot.dir}"
			destfile="${plugin.file}"
		/>
	</target>

	<target name="deploy" depends="war">
		<copy file="${plugin.file}" todir="${auto.deploy.dir}" />
	</target>

	<target name="build-lang-cmd">
		<antcall target="build-lang-native2ascii-all" />

		<java
			classname="com.liferay.portal.tools.LangBuilder"
			classpathref="portal.classpath"
			fork="true"
			newenvironment="true"
		>
			<jvmarg value="-Dfile.encoding=UTF-8" />
			<jvmarg value="-Duser.country=US" />
			<jvmarg value="-Duser.language=en" />
			<arg value="${lang.dir}" />
			<arg value="${lang.file}" />
		</java>

		<antcall target="build-lang-native2ascii-all" />

		<copy file="${lang.dir}/${lang.file}.properties" tofile="${lang.dir}/${lang.file}_en.properties" />

		<delete file="alfresco.log" />
	</target>

	<target name="build-lang-native2ascii">
		<delete file="${lang.dir}/${lang.file}_${lang.code}.properties" failonerror="false" />

		<exec dir="${lang.dir}" executable="cmd.exe" os="Windows 95,Windows 98,Windows NT,Windows 2000,Windows XP">
			<arg line="/c '${env.JAVA_HOME}'/bin/native2ascii -encoding UTF-8 ${lang.file}_${lang.code}.properties.native ${lang.file}_${lang.code}.properties" />
		</exec>

		<exec dir="${lang.dir}" executable="${env.JAVA_HOME}/bin/native2ascii" os="Linux,FreeBSD,Solaris,Mac OS X">
			<arg line="-encoding UTF-8 ${lang.file}_${lang.code}.properties.native ${lang.file}_${lang.code}.properties" />
		</exec>
	</target>

	<target name="build-lang-native2ascii-all">
		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="ar" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="ca" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="zh_CN" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="zh_TW" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="cs" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="nl" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="fr" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="de" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="el" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="hu" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="it" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="ja" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="ko" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="pt" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="ru" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="es" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="sv" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="tr" />
		</antcall>

		<antcall target="build-lang-native2ascii">
			<param name="lang.code" value="vi" />
		</antcall>
	</target>

	<target name="merge" if="original.war.file">
		<if>
			<not>
				<uptodate srcfile="${original.war.file}" targetfile="tmp" />
			</not>
			<then>
				<delete dir="tmp" />
				<mkdir dir="tmp" />

				<mkdir dir="tmp/WEB-INF/classes" />
				<mkdir dir="tmp/WEB-INF/lib" />

				<unzip dest="tmp" src="${original.war.file}" />

				<copy todir="tmp" overwrite="true">
					<fileset dir="docroot" />
				</copy>
			</then>
		</if>

		<copy todir="tmp" overwrite="false">
			<fileset dir="docroot" />
		</copy>
	</target>
</project>