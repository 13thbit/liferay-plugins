<?xml version="1.0"?>

<workflow-definition
	xmlns="urn:liferay.com:liferay-workflow_6.1.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="urn:liferay.com:liferay-workflow_6.1.0 http://www.liferay.com/dtd/liferay-workflow-definition_6_1_0.xsd"
>
	<name>Category Specific Approval</name>
	<description>A single approver can approve a workflow content.</description>
	<version>1</version>
	<state>
		<name>created</name>
		<initial>true</initial>
		<transitions>
			<transition>
				<name>determine.branch</name>
				<target>determine-branch</target>
				<default>true</default>
			</transition>
		</transitions>
	</state>
	<state>
		<name>determine-branch</name>
		<transitions>
			<transition>
				<name>legal.review</name>
				<target>legal-review</target>
				<default>false</default>
				<condition>
					<description></description>
					<script>
						<![CDATA[
							import com.liferay.portal.kernel.util.GetterUtil;
							import com.liferay.portal.kernel.workflow.WorkflowConstants;
							import com.liferay.portlet.asset.model.AssetCategory;
							import com.liferay.portlet.asset.model.AssetEntry;
							import com.liferay.portlet.asset.service.AssetEntryLocalServiceUtil;

							String expectedCategory = "legal";
							
							String className = (String)workflowContext.get(
								WorkflowConstants.CONTEXT_ENTRY_CLASS_NAME);
							long classPK = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_ENTRY_CLASS_PK));

							AssetEntry entry = AssetEntryLocalServiceUtil.getEntry(className, classPK);
							Iterator categoriesIter = entry.getCategories().iterator();

							while (categoriesIter.hasNext()) {
								AssetCategory category = (AssetCategory)categoriesIter.next();
								if (category.getName().equals(expectedCategory)) {
									returnValue = true;
									return;
								}
							}

							returnValue = false;
						]]>
					</script>
					<script-language>groovy</script-language>
				</condition>
			</transition>
			<transition>
				<name>content.review</name>
				<target>content-review</target>
				<default>false</default>
				<condition>
					<description></description>
					<script>
						<![CDATA[
							import com.liferay.portal.kernel.util.GetterUtil;
							import com.liferay.portal.kernel.workflow.WorkflowConstants;
							import com.liferay.portlet.asset.model.AssetCategory;
							import com.liferay.portlet.asset.model.AssetEntry;
							import com.liferay.portlet.asset.service.AssetEntryLocalServiceUtil;

							String expectedCategory = "content";

							String className = (String)workflowContext.get(
								WorkflowConstants.CONTEXT_ENTRY_CLASS_NAME);
							long classPK = GetterUtil.getLong((String)workflowContext.get(WorkflowConstants.CONTEXT_ENTRY_CLASS_PK));

							AssetEntry entry = AssetEntryLocalServiceUtil.getEntry(className, classPK);
							Iterator categoriesIter = entry.getCategories().iterator();

							while (categoriesIter.hasNext()) {
								AssetCategory category = (AssetCategory)categoriesIter.next();
								if (category.getName().equals(expectedCategory)) {
									returnValue = true;
									return;
								}
							}

							returnValue = false;
						]]>
					</script>
					<script-language>groovy</script-language>
				</condition>
			</transition>
		</transitions>
	</state>
	<task>
		<name>update</name>
		<actions>
			<notification>
				<name>Creator Modification Notification</name>
				<execution-type>onAssignment</execution-type>
				<template>Your submission was rejected by a reviewer, please modify and resubmit.</template>
				<template-language>text</template-language>
				<notification-type>email</notification-type>
			</notification>
		</actions>
		<assignments>
			<user />
		</assignments>
		<transitions>
			<transition>
				<name>resubmit</name>
				<target>determine-branch</target>
				<default>true</default>
			</transition>
		</transitions>
	</task>
	<task>
		<name>legal-review</name>
		<actions>
			<notification>
				<name>Review Notification</name>
				<execution-type>onAssignment</execution-type>
				<template>You have a new submission waiting for your review in the workflow.</template>
				<template-language>text</template-language>
				<notification-type>email</notification-type>
			</notification>
		</actions>
		<assignments>
			<roles>
                <role>
                    <role-type>community</role-type>
                    <name>Community Administrator</name>
                </role>
				<role>
					<role-type>community</role-type>
					<name>Community Content Reviewer</name>
				</role>
				<role>
					<role-type>community</role-type>
					<name>Community Owner</name>
				</role>
				<role>
                    <role-type>organization</role-type>
                    <name>Organization Administrator</name>
                </role>
                <role>
					<role-type>organization</role-type>
					<name>Organization Content Reviewer</name>
				</role>
				<role>
					<role-type>organization</role-type>
					<name>Organization Owner</name>
				</role>
				<role>
					<role-type>regular</role-type>
					<name>Portal Content Reviewer</name>
				</role>
				<role>
					<role-type>regular</role-type>
					<name>Administrator</name>
				</role>
			</roles>
		</assignments>
		<transitions>
			<transition>
				<name>approve</name>
				<target>approved</target>
				<default>true</default>
			</transition>
			<transition>
				<name>reject</name>
				<target>update</target>
				<default>false</default>
			</transition>
		</transitions>
	</task>
	<task>
		<name>content-review</name>
		<actions>
			<notification>
				<name>Review Notification</name>
				<execution-type>onAssignment</execution-type>
				<template>You have a new submission waiting for your review in the workflow.</template>
				<template-language>text</template-language>
				<notification-type>email</notification-type>
			</notification>
		</actions>
		<assignments>
			<roles>
                <role>
                    <role-type>community</role-type>
                    <name>Community Administrator</name>
                </role>
				<role>
					<role-type>community</role-type>
					<name>Community Legal Reviewer</name>
				</role>
				<role>
					<role-type>community</role-type>
					<name>Community Owner</name>
				</role>
				<role>
                    <role-type>organization</role-type>
                    <name>Organization Administrator</name>
                </role>
                <role>
					<role-type>organization</role-type>
					<name>Organization Legal Reviewer</name>
				</role>
				<role>
					<role-type>organization</role-type>
					<name>Organization Owner</name>
				</role>
				<role>
					<role-type>regular</role-type>
					<name>Portal Legal Reviewer</name>
				</role>
				<role>
					<role-type>regular</role-type>
					<name>Administrator</name>
				</role>
			</roles>
		</assignments>
		<transitions>
			<transition>
				<name>approve</name>
				<target>approved</target>
				<default>true</default>
			</transition>
			<transition>
				<name>reject</name>
				<target>update</target>
				<default>false</default>
			</transition>
		</transitions>
	</task>
	<state>
		<name>approved</name>
		<actions>
			<action>
				<name>approve</name>
				<execution-type>onEntry</execution-type>
				<script>
					<![CDATA[
						import com.liferay.portal.kernel.workflow.WorkflowConstants;
						import com.liferay.portal.kernel.workflow.WorkflowStatusManagerUtil;

						WorkflowStatusManagerUtil.updateStatus(WorkflowConstants.toStatus("approved"), workflowContext);
					]]>
				</script>
				<script-language>groovy</script-language>
			</action>
		</actions>
	</state>
</workflow-definition>