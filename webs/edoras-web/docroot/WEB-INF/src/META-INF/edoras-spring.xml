<?xml version="1.0" encoding="UTF-8"?>

<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
>
	<import resource="org.edorasframework.common-context.xml" />
	<import resource="org.edorasframework.el-context.xml" />
	<import resource="org.edorasframework.scopes.core-context.xml" />
	<import resource="org.edorasframework.process.core-context.xml" />
	<import resource="org.edorasframework.process.workflow-context.xml" />

	<!--
	The process model deployer looks up processes first from the class path,
	then from the data path, and then from the hot deploy path. Processes in the
	data path override those in the class path. Processes in the hot deploy path
	override those in the data path.

	Processes deployed in the hot deploy path must be packaged in a ZIP file
	that matches *-edoras.zip.
	-->
	<bean id="edsPrcModelDeployer" class="org.edorasframework.process.core.service.ProcessModelDeployerImpl">
		<property name="setupId" value="org.edorasframework.process.api.setup.Default" />
		<property name="deployLookupPath" value="classpath*:/META-INF/process/*.edsprc" />
		<property name="startingLookupPath" value="file:${liferay.home}/data/edoras/*.edsprc" />
	</bean>
	
	
	<!--
	The configuration for the entity factory to use the model beans being
	created by the service builder of Liferay. 
	-->
	<bean id="edsPrcEntityClassNames" class="org.edorasframework.process.core.entity.ProcessEntityClassNameConfigurer">
        <property name="processDefinitionClass" value="com.liferay.portal.workflow.edoras.model.impl.WorkflowDefinitionImpl"/>
    </bean>
    
    
    <!-- DAO implementations to use service builder -->
    
    <bean id="edsPrcServiceDao" class="com.liferay.portal.workflow.edoras.dao.WorkflowDefinitionDao">
    </bean>
    
    <!--
    Transaction template based on Spring, injected into the workflow engine, but
    using the transaction manager from Liferay and service builder.
    -->
    <bean id="edsPrcTxTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    	<property name="transactionManager" ref="portalTransactionManager"/>
    </bean>
    <bean id="edsPrcTxTemplateReadOnly" class="org.springframework.transaction.support.TransactionTemplate">
    	<property name="transactionManager" ref="portalTransactionManager"/>
    </bean>
    <bean id="portalTransactionManager" class="com.liferay.portal.workflow.edoras.dao.tx.TransactionManagerClp" />
</beans>